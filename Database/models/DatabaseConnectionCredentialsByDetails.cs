/*
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DatabaseService.Models
{
    /// <summary>
    /// User information to connect to the database.
    /// 
    /// </summary>
    public class DatabaseConnectionCredentialsByDetails : DatabaseConnectionCredentials
    {
        
        /// <value>
        /// The name of the credential information that used to connect to the database.
        /// </value>
        [JsonProperty(PropertyName = "credentialName")]
        public string CredentialName { get; set; }
        
        /// <value>
        /// The username that will be used to connect to the database.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Username is required.")]
        [JsonProperty(PropertyName = "username")]
        public string Username { get; set; }
        
        /// <value>
        /// The password that will be used to connect to the database.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Password is required.")]
        [JsonProperty(PropertyName = "password")]
        public string Password { get; set; }
                ///
        /// <value>
        /// The role of the user that will be connecting to the database.
        /// </value>
        ///
        public enum RoleEnum {
            [EnumMember(Value = "SYSDBA")]
            Sysdba,
            [EnumMember(Value = "NORMAL")]
            Normal
        };

        /// <value>
        /// The role of the user that will be connecting to the database.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Role is required.")]
        [JsonProperty(PropertyName = "role")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<RoleEnum> Role { get; set; }
        
        [JsonProperty(PropertyName = "credentialType")]
        private readonly string credentialType = "DETAILS";
    }
}
