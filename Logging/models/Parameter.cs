/*
 * Copyright (c) 2020, 2023, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.LoggingService.Models
{
    /// <summary>
    /// Parameters that a resource category supports.
    /// </summary>
    public class Parameter 
    {
        
        /// <value>
        /// Parameter name.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Name is required.")]
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }
        
        /// <value>
        /// The user-friendly display name. This must be unique within the enclosing resource,
        /// and it's changeable. Avoid entering confidential information.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
                ///
        /// <value>
        /// Parameter type.
        /// </value>
        ///
        public enum TypeEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "integer")]
            Integer,
            [EnumMember(Value = "string")]
            String,
            [EnumMember(Value = "boolean")]
            Boolean,
            [EnumMember(Value = "ENUM_STRING")]
            EnumString,
            [EnumMember(Value = "RQS_FILTER")]
            RqsFilter
        };

        /// <value>
        /// Parameter type.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Type is required.")]
        [JsonProperty(PropertyName = "type")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<TypeEnum> Type { get; set; }
        
        /// <value>
        /// Parameter rqsType if applicable.
        /// </value>
        [JsonProperty(PropertyName = "rqsType")]
        public string RqsType { get; set; }
        
        /// <value>
        /// Java regex pattern to validate a parameter value.
        /// </value>
        [JsonProperty(PropertyName = "pattern")]
        public string Pattern { get; set; }
        
    }
}
