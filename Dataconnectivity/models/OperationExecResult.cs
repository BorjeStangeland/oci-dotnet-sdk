/*
 * Copyright (c) 2020, 2023, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DataconnectivityService.Models
{
    /// <summary>
    /// Operation execution result for a single input set.
    /// </summary>
    public class OperationExecResult 
    {
                ///
        /// <value>
        /// Status of the operation job for a particular set of input.
        /// </value>
        ///
        public enum ExecutionStatusEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "FAILED")]
            Failed,
            [EnumMember(Value = "SUCCESS")]
            Success,
            [EnumMember(Value = "QUEUED")]
            Queued,
            [EnumMember(Value = "RUNNING")]
            Running
        };

        /// <value>
        /// Status of the operation job for a particular set of input.
        /// </value>
        [JsonProperty(PropertyName = "executionStatus")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<ExecutionStatusEnum> ExecutionStatus { get; set; }
        
        /// <value>
        /// Error message when the execution of operation fails.
        /// </value>
        [JsonProperty(PropertyName = "errorMessage")]
        public string ErrorMessage { get; set; }
        
        /// <value>
        /// Metrics of operation execution job.
        /// </value>
        [JsonProperty(PropertyName = "metrics")]
        public System.Object Metrics { get; set; }
        
        /// <value>
        /// The list of emitted rows for each OUT/INOUT parameter.
        /// </value>
        [JsonProperty(PropertyName = "outputValues")]
        public System.Collections.Generic.List<System.Collections.Generic.List<System.Object>> OutputValues { get; set; }
        
        /// <value>
        /// True, if the error message must be displayed in the UI.
        /// </value>
        [JsonProperty(PropertyName = "isWhitelistedErrorMessage")]
        public System.Nullable<bool> IsWhitelistedErrorMessage { get; set; }
        
    }
}
