/*
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DataconnectivityService.Models
{
    /// <summary>
    /// The attribute object fo the registry that can be used to get the connector details.
    /// </summary>
    public class Attribute 
    {
        
        /// <value>
        /// The name of of the attribute.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Name is required.")]
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }
        
        /// <value>
        /// True if attribute is sensitive.
        /// </value>
        [JsonProperty(PropertyName = "isSensitive")]
        public System.Nullable<bool> IsSensitive { get; set; }
        
        /// <value>
        /// True if attribute is mandatory.
        /// </value>
        [JsonProperty(PropertyName = "isMandatory")]
        public System.Nullable<bool> IsMandatory { get; set; }
        
        /// <value>
        /// True if attribute is generated.
        /// </value>
        [JsonProperty(PropertyName = "isGenerated")]
        public System.Nullable<bool> IsGenerated { get; set; }
        
        /// <value>
        /// True if attribute is encoded.
        /// </value>
        [JsonProperty(PropertyName = "isBase64Encoded")]
        public System.Nullable<bool> IsBase64Encoded { get; set; }
        
        /// <value>
        /// The list of valid keys.
        /// </value>
        [JsonProperty(PropertyName = "validKeyList")]
        public System.Collections.Generic.List<string> ValidKeyList { get; set; }
        
        /// <value>
        /// The attribute type details.
        /// </value>
        [JsonProperty(PropertyName = "attributeType")]
        public string AttributeType { get; set; }
        
    }
}
