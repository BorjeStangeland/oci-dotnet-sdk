/*
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DataconnectivityService.Models
{
    /// <summary>
    /// BICC Connector Attribute. Object Storage as External storage where the BICC extracted files are written.
    /// </summary>
    public class ExternalStorage : ConnectorAttribute
    {
        
        /// <value>
        /// ID of the external stoarge configured in the BICC console. Usually it's numeric.
        /// </value>
        [JsonProperty(PropertyName = "storageId")]
        public string StorageId { get; set; }
        
        /// <value>
        /// Name of the external storage configured in the BICC console.
        /// </value>
        [JsonProperty(PropertyName = "storageName")]
        public string StorageName { get; set; }
        
        /// <value>
        /// Object Storage host URL. DO not give http/https.
        /// </value>
        [JsonProperty(PropertyName = "host")]
        public string Host { get; set; }
        
        /// <value>
        /// Tenancy OCID of the OOS bucket.
        /// </value>
        [JsonProperty(PropertyName = "tenancyId")]
        public string TenancyId { get; set; }
        
        /// <value>
        /// Namespace of the OOS bucket.
        /// </value>
        [JsonProperty(PropertyName = "namespace")]
        public string Namespace { get; set; }
        
        /// <value>
        /// Bucket name where BICC extracts and stores the files.
        /// </value>
        [JsonProperty(PropertyName = "bucket")]
        public string Bucket { get; set; }
        
        [JsonProperty(PropertyName = "modelType")]
        private readonly string modelType = "EXTERNAL_STORAGE";
    }
}
