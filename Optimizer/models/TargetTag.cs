/*
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.OptimizerService.Models
{
    /// <summary>
    /// A target tag with tag namespace, tag definition, tag value type, and tag values attached to the current profile override.
    /// 
    /// </summary>
    public class TargetTag 
    {
        
        /// <value>
        /// The name of the tag namespace.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TagNamespaceName is required.")]
        [JsonProperty(PropertyName = "tagNamespaceName")]
        public string TagNamespaceName { get; set; }
        
        /// <value>
        /// The name of the tag definition.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TagDefinitionName is required.")]
        [JsonProperty(PropertyName = "tagDefinitionName")]
        public string TagDefinitionName { get; set; }
        
        /// <value>
        /// The tag value type.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TagValueType is required.")]
        [JsonProperty(PropertyName = "tagValueType")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<TagValueType> TagValueType { get; set; }
        
        /// <value>
        /// The list of tag values.
        /// </value>
        [JsonProperty(PropertyName = "tagValues")]
        public System.Collections.Generic.List<string> TagValues { get; set; }
        
    }
}
