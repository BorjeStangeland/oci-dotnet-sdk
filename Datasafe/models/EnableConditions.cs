/*
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DatasafeService.Models
{
    /// <summary>
    /// The details of the audit policy provisioning conditions.
    /// </summary>
    public class EnableConditions 
    {
                ///
        /// <value>
        /// The entity include or exclude selection.
        /// </value>
        ///
        public enum EntitySelectionEnum {
            [EnumMember(Value = "INCLUDE")]
            Include,
            [EnumMember(Value = "EXCLUDE")]
            Exclude
        };

        /// <value>
        /// The entity include or exclude selection.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "EntitySelection is required.")]
        [JsonProperty(PropertyName = "entitySelection")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<EntitySelectionEnum> EntitySelection { get; set; }
                ///
        /// <value>
        /// The entity type that the policy must be enabled for.
        /// </value>
        ///
        public enum EntityTypeEnum {
            [EnumMember(Value = "USER")]
            User,
            [EnumMember(Value = "ROLE")]
            Role,
            [EnumMember(Value = "ALL_USERS")]
            AllUsers
        };

        /// <value>
        /// The entity type that the policy must be enabled for.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "EntityType is required.")]
        [JsonProperty(PropertyName = "entityType")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<EntityTypeEnum> EntityType { get; set; }
                ///
        /// <value>
        /// The operation status that the policy must be enabled for.
        /// </value>
        ///
        public enum OperationStatusEnum {
            [EnumMember(Value = "SUCCESS")]
            Success,
            [EnumMember(Value = "FAILURE")]
            Failure,
            [EnumMember(Value = "BOTH")]
            Both
        };

        /// <value>
        /// The operation status that the policy must be enabled for.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "OperationStatus is required.")]
        [JsonProperty(PropertyName = "operationStatus")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<OperationStatusEnum> OperationStatus { get; set; }
        
        /// <value>
        /// List of users or roles that the policy must be enabled for.
        /// </value>
        [JsonProperty(PropertyName = "entityNames")]
        public System.Collections.Generic.List<string> EntityNames { get; set; }
        
    }
}
