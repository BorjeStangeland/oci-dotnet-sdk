/*
 * Copyright (c) 2020, 2023, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.GoldengateService.Models
{
    /// <summary>
    /// Metadata required to export wallet from deployment
    /// 
    /// </summary>
    public class ExportDeploymentWalletDetails 
    {
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the customer vault being
        /// referenced.
        /// If provided, this will reference a vault which the customer will be required to ensure
        /// the policies are established to permit the GoldenGate Service to manage secrets contained
        /// within this vault.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "VaultId is required.")]
        [JsonProperty(PropertyName = "vaultId")]
        public string VaultId { get; set; }
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the customer \"Master\" key being
        /// referenced.
        /// If provided, this will reference a key which the customer will be required to ensure
        /// the policies are established to permit the GoldenGate Service to utilize this key to
        /// manage secrets.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "MasterEncryptionKeyId is required.")]
        [JsonProperty(PropertyName = "masterEncryptionKeyId")]
        public string MasterEncryptionKeyId { get; set; }
        
        /// <value>
        /// Name of the secret with which secret is shown in vault
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "SecretName is required.")]
        [JsonProperty(PropertyName = "secretName")]
        public string SecretName { get; set; }
        
        /// <value>
        /// Metadata about this specific object.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }
        
    }
}
