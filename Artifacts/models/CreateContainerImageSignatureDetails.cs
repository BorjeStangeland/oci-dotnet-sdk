/*
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.ArtifactsService.Models
{
    /// <summary>
    /// Upload container image signature request details.
    /// </summary>
    public class CreateContainerImageSignatureDetails 
    {
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the compartment in which the container repository exists.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CompartmentId is required.")]
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the container image.
        /// <br/>
        /// Example: ocid1.containerimage.oc1..exampleuniqueID
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ImageId is required.")]
        [JsonProperty(PropertyName = "imageId")]
        public string ImageId { get; set; }
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the kmsKeyId used to sign the container image.
        /// <br/>
        /// Example: ocid1.key.oc1..exampleuniqueID
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "KmsKeyId is required.")]
        [JsonProperty(PropertyName = "kmsKeyId")]
        public string KmsKeyId { get; set; }
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the kmsKeyVersionId used to sign the container image.
        /// <br/>
        /// Example: ocid1.keyversion.oc1..exampleuniqueID
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "KmsKeyVersionId is required.")]
        [JsonProperty(PropertyName = "kmsKeyVersionId")]
        public string KmsKeyVersionId { get; set; }
        
        /// <value>
        /// The base64 encoded signature payload that was signed.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Message is required.")]
        [JsonProperty(PropertyName = "message")]
        public string Message { get; set; }
        
        /// <value>
        /// The signature of the message field using the kmsKeyId, the kmsKeyVersionId, and the signingAlgorithm.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Signature is required.")]
        [JsonProperty(PropertyName = "signature")]
        public string Signature { get; set; }
                ///
        /// <value>
        /// The algorithm to be used for signing. These are the only supported signing algorithms for container images.
        /// </value>
        ///
        public enum SigningAlgorithmEnum {
            [EnumMember(Value = "SHA_224_RSA_PKCS_PSS")]
            Sha224RsaPkcsPss,
            [EnumMember(Value = "SHA_256_RSA_PKCS_PSS")]
            Sha256RsaPkcsPss,
            [EnumMember(Value = "SHA_384_RSA_PKCS_PSS")]
            Sha384RsaPkcsPss,
            [EnumMember(Value = "SHA_512_RSA_PKCS_PSS")]
            Sha512RsaPkcsPss
        };

        /// <value>
        /// The algorithm to be used for signing. These are the only supported signing algorithms for container images.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "SigningAlgorithm is required.")]
        [JsonProperty(PropertyName = "signingAlgorithm")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<SigningAlgorithmEnum> SigningAlgorithm { get; set; }
        
    }
}
