/*
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.AianomalydetectionService.Models
{
    /// <summary>
    /// Specifies the details for an Anomaly Detection model trained with MSET.
    /// </summary>
    public class ModelTrainingResults 
    {
        
        /// <value>
        /// The final-achieved model accuracy metric on individual value level
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Fap is required.")]
        [JsonProperty(PropertyName = "fap")]
        public System.Nullable<float> Fap { get; set; }
        
        /// <value>
        /// The model accuracy metric on timestamp level.
        /// </value>
        [JsonProperty(PropertyName = "multivariateFap")]
        public System.Nullable<float> MultivariateFap { get; set; }
        
        /// <value>
        /// A boolean value to indicate if train goal/targetFap is achieved for trained model
        /// </value>
        [JsonProperty(PropertyName = "isTrainingGoalAchieved")]
        public System.Nullable<bool> IsTrainingGoalAchieved { get; set; }
        
        /// <value>
        /// A warning message to explain the reason when targetFap cannot be achieved for trained model
        /// </value>
        [JsonProperty(PropertyName = "warning")]
        public string Warning { get; set; }
        
        /// <value>
        /// The list of signal details.
        /// </value>
        [JsonProperty(PropertyName = "signalDetails")]
        public System.Collections.Generic.List<PerSignalDetails> SignalDetails { get; set; }
        
        [JsonProperty(PropertyName = "rowReductionDetails")]
        public RowReductionDetails RowReductionDetails { get; set; }
        
    }
}
